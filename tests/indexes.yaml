- feature: MultiIndex
  schema: >
    User(id)(username) {
      id: Number
      username: String
    }
  tests:
    - test: disallow non-unique multi indexes
      data:
        User:
          - id: 0
            username: a
          - id: 1
            username: b # User 1 and 2 have the same username
          - id: 2
            username: b
      errors:
        - err: NonUniqueSubIndex
          col: username
          row: [1, 2]
- feature: Composite Index
  schema: >
    Date(id)(year, month, day) {
      id: Number
      year: Number
      month: Number
      day: Number
    }
  tests:
    - test: allow unique composite indexes
      debug: true
      data:
        Date:
          - id: 1
            year: 2000
            month: 1
            day: 1
          - id: 1
            year: 2001 # different year
            month: 1
            day: 1
          - id: 1
            year: 2000
            month: 2   # different month
            day: 1
          - id: 1
            year: 2000
            month: 1  
            day: 2     # different day
          - id: 2
            year: 2010
            month: 1
            day: 1
          - id: 3      # duplicate date
            year: 2010
            month: 1
            day: 1
          - id: 4     # nothing wrong with duplicate
            year: 2020
            month: 1
            day: 1
          - id: 4     # nothing wrong with duplicate
            year: 2020
            month: 1
            day: 1
      errors:
        - err: NonUniqueSubIndex
          col: id
          row: [0, 1, 2, 3]
        - err: NonUniqueSubIndex
          col: [year, month, day]
          row: [4, 5]
# - feature: Conflicting index detection
#   schema: >
#     Employee(id)(external_id) {
#       id: Number
#       external_id: Number
#     }
#   tests:
#     - test: dont allow ambiguous index values
#       valid: false
#       data:
#         Employee:
#           - id: 0
#             external_id: 1000
#           - id: 1000          # could get confused with external_id of other employee
#             external_id: 1001
#     - test: allow indexes to have the same value
#       valid: true
#       data:
#         Employee:
#           - id: 0
#             external_id: 0
# - feature: Conflicting composite index detection
#   schema: >
#     Foo(ax,ay)(bx,by) {
#       ax: Number
#       ay: Number
#       bx: Number
#       by: Number
#     }
#   tests:
#     - test: dont allow ambiguous index values
#       valid: false
#       data:
#         Foo:
#           - key1a: 10
#             key1b: 11
#             key2a: 20
#             key2b: 21
#           - key1a: 15
#             key1b: 16
#             key2a: 10
#             key2b: 11