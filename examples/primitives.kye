type Number {
    type Format {
        enum Sign { POSITIVE, NEGATIVE }
        from String
        length: Number
        decimals: Number
        leading_zeros: Boolean
        trailing_zeros: Boolean
        sign?: '+' | '-'
        decimal_separator?: Char
        thousands_separator?: Char
    }

    to from String
    format: Format
    operation > - + ~ * / Number
}

type Integer: Number {
    format: Number.Format[!decimals]
    operation > - + ~ * Integer
}

type UInteger: Integer {
    format: Number.Format[!decimals & sign != '-']
    operation > + * - UInteger
}

type Count: UInteger {
    null 0
}

type String {
    null ''
    length: UInteger
    operation > String
    operation + String
}

type Char: String[length == 1]
